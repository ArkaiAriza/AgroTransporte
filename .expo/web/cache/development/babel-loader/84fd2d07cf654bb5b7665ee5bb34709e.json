{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\macas\\\\Documents\\\\GitHub\\\\AgroTransporte\\\\src\\\\contexts\\\\UserContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport AgroTransporte from \"../apis/AgroTransporteApi\";\nvar UserContext = React.createContext({\n  user: {},\n  userId: '',\n  logged: false,\n  loading: true\n});\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userId = _useState4[0],\n      setUserId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      logged = _useState6[0],\n      setLogged = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    setLoading(true);\n\n    var getUserFromStorage = function getUserFromStorage() {\n      var value, _await$AgroTransporte, data;\n\n      return _regeneratorRuntime.async(function getUserFromStorage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 3:\n              value = _context.sent;\n\n              if (!(value !== null)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AgroTransporte.get(\"/agroapi/current_user/\" + value));\n\n            case 7:\n              _await$AgroTransporte = _context.sent;\n              data = _await$AgroTransporte.data;\n              setUser(data);\n              setLogged(true);\n\n            case 11:\n              setLoading(false);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    getUserFromStorage();\n  }, []);\n\n  var logIn = function logIn(user) {\n    return _regeneratorRuntime.async(function logIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@user_id', user._id));\n\n          case 3:\n            setUser(user);\n            setLogged(true);\n            setLoading(false);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var logOut = function logOut() {\n    return _regeneratorRuntime.async(function logOut$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('logOut');\n            setUser({});\n            setLogged(false);\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('@user_id'));\n\n          case 6:\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[3, 8]], Promise);\n  };\n\n  var setUserType = function setUserType(type) {\n    var res;\n    return _regeneratorRuntime.async(function setUserType$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AgroTransporte.put(\"/agroapi/user_type/\" + user._id, {\n              userType: type\n            }));\n\n          case 2:\n            res = _context4.sent;\n            setUser(_objectSpread(_objectSpread({}, user), {}, {\n              userType: type\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      user: user,\n      userId: userId,\n      logged: logged,\n      logIn: logIn,\n      logOut: logOut,\n      setUserType: setUserType,\n      loading: loading,\n      setLoading: setLoading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/macas/Documents/GitHub/AgroTransporte/src/contexts/UserContext.js"],"names":["React","useState","useEffect","AsyncStorage","AgroTransporte","UserContext","createContext","user","userId","logged","loading","UserProvider","children","setUser","setUserId","setLogged","setLoading","getUserFromStorage","getItem","value","get","data","console","log","logIn","setItem","_id","logOut","removeItem","setUserType","type","put","userType","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport AgroTransporte from '../apis/AgroTransporteApi';\r\n\r\nconst UserContext = React.createContext({\r\n  user: {},\r\n  userId: '',\r\n  logged: false,\r\n  loading: true,\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState({});\r\n  const [userId, setUserId] = useState('');\r\n  const [logged, setLogged] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getUserFromStorage = async () => {\r\n      try {\r\n        const value = await AsyncStorage.getItem('@user_id');\r\n        if (value !== null) {\r\n          const { data } = await AgroTransporte.get(\r\n            `/agroapi/current_user/${value}`\r\n          );\r\n          setUser(data);\r\n          setLogged(true);\r\n        }\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getUserFromStorage();\r\n  }, []);\r\n\r\n  const logIn = async (user) => {\r\n    try {\r\n      await AsyncStorage.setItem('@user_id', user._id);\r\n      setUser(user);\r\n      setLogged(true);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const logOut = async () => {\r\n    console.log('logOut');\r\n    setUser({});\r\n    setLogged(false);\r\n    try {\r\n      await AsyncStorage.removeItem('@user_id');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const setUserType = async (type) => {\r\n    const res = await AgroTransporte.put(`/agroapi/user_type/${user._id}`, {\r\n      userType: type,\r\n    });\r\n    setUser({ ...user, userType: type });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        userId,\r\n        logged,\r\n        logIn,\r\n        logOut,\r\n        setUserType,\r\n        loading,\r\n        setLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n"]},"metadata":{},"sourceType":"module"}