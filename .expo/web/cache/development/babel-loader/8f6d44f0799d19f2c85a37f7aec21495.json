{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macas\\\\Documents\\\\GitHub\\\\AgroTransporte\\\\src\\\\screens\\\\AppMain.js\";\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Appbar, Avatar } from 'react-native-paper';\nimport LandingPage from \"./LandingPage\";\nimport CreateOrderPosition from \"./CreateOrderPosition\";\nimport CreateOrderContent from \"./CreateOrderContent\";\nvar Stack = createStackNavigator();\n\nvar Header = function Header(_ref) {\n  var scene = _ref.scene,\n      previous = _ref.previous,\n      navigation = _ref.navigation;\n  var options = scene.descriptor.options;\n  var title = options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n  return React.createElement(Appbar.Header, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, previous ? React.createElement(Appbar.BackAction, {\n    onPress: function onPress() {\n      return navigation.pop();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }) : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Avatar.Icon, {\n    size: 40,\n    icon: \"menu\",\n    style: styles.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), React.createElement(Appbar.Content, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AppMain = function AppMain() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Landing\",\n    headerMode: \"screen\",\n    screenOptions: {\n      header: function header(_ref2) {\n        var scene = _ref2.scene,\n            previous = _ref2.previous,\n            navigation = _ref2.navigation;\n        return React.createElement(Header, {\n          scene: scene,\n          previous: previous,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Landing\",\n    component: LandingPage,\n    options: {\n      headerTitle: 'AgroTransporte'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateOrder\",\n    component: CreateOrderPosition,\n    options: {\n      headerTitle: 'Crear Pedido'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateOrderContent\",\n    component: CreateOrderContent,\n    options: {\n      headerTitle: 'Crear Pedido'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: 'white'\n  },\n  menuIcon: {\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/macas/Documents/GitHub/AgroTransporte/src/screens/AppMain.js"],"names":["React","createStackNavigator","MaterialCommunityIcons","DrawerActions","Appbar","Avatar","LandingPage","CreateOrderPosition","CreateOrderContent","Stack","Header","scene","previous","navigation","options","descriptor","title","headerTitle","undefined","route","name","styles","header","pop","dispatch","toggleDrawer","menuIcon","AppMain","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { DrawerActions } from '@react-navigation/native';\r\nimport { Appbar, Avatar } from 'react-native-paper';\r\n\r\nimport LandingPage from './LandingPage';\r\nimport CreateOrderPosition from './CreateOrderPosition';\r\nimport CreateOrderContent from './CreateOrderContent';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Header = ({ scene, previous, navigation }) => {\r\n  const { options } = scene.descriptor;\r\n  const title =\r\n    options.headerTitle !== undefined\r\n      ? options.headerTitle\r\n      : options.title !== undefined\r\n      ? options.title\r\n      : scene.route.name;\r\n\r\n  return (\r\n    <Appbar.Header style={styles.header}>\r\n      {previous ? (\r\n        <Appbar.BackAction onPress={() => navigation.pop()} />\r\n      ) : (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.dispatch(DrawerActions.toggleDrawer());\r\n          }}\r\n        >\r\n          <Avatar.Icon size={40} icon='menu' style={styles.menuIcon} />\r\n        </TouchableOpacity>\r\n      )}\r\n      <Appbar.Content title={title} />\r\n    </Appbar.Header>\r\n  );\r\n};\r\n\r\nexport default AppMain = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName='Landing'\r\n      headerMode='screen'\r\n      screenOptions={{\r\n        header: ({ scene, previous, navigation }) => (\r\n          <Header scene={scene} previous={previous} navigation={navigation} />\r\n        ),\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name='Landing'\r\n        component={LandingPage}\r\n        options={{ headerTitle: 'AgroTransporte' }}\r\n      />\r\n      <Stack.Screen\r\n        name='CreateOrder'\r\n        component={CreateOrderPosition}\r\n        options={{ headerTitle: 'Crear Pedido' }}\r\n      />\r\n      <Stack.Screen\r\n        name='CreateOrderContent'\r\n        component={CreateOrderContent}\r\n        options={{ headerTitle: 'Crear Pedido' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    backgroundColor: 'white',\r\n  },\r\n  menuIcon: {\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}